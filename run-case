#!/bin/bash

# Declare the top-level directory and the program script.
projdir=~/sandbox/dmswarm-hybrid
runprog=${projdir}/run.sh

# Define the help text.
show_help() {
    printf "
This is a collection of aliases for ${runprog}.
Each case is keyed by a unique string. For example,

``$ ./run-case default``

is equivalent to

``$ cd ${projdir}``
``$ ./run.sh -Nx 8 -Ny 8 -Nz 8``
"
}

# Set up the mapping from name to function.
declare -A case_map

# Define the case functions.
run_default() {
    ./run.sh -Nx 8 -Ny 8 -Nz 8
}
case_map['default']=run_default
run_gamg_basic() {
    ./run.sh \
        -ksp_monitor_short \
        -ksp_type gmres \
        -ksp_max_it 100 \
        -pc_type gamg \
        -pc_gamg_type agg \
        -Nx 16 -Ny 16 -Nz 16 -n 2
}
case_map['gamg basic']=run_gamg_basic
case_map['gamg-basic']=run_gamg_basic
case_map['gamg_basic']=run_gamg_basic

# Define a function to print names of registered cases.
show_cases() {
    for key in "${!case_map[@]}"; do
        echo "$key"
    done
}

# Define the function that will run a registered case.
run_case() {
    if [ -z "${1}" ]; then
        # Exit with an error if the user didn't provide a name.
        echo "Got an empty name. Exiting."
        exit 1
    fi
    if [ -v case_map[${1}] ]; then
        # Move the runtime directory to the top of the stack.
        pushd "${projdir}" &> /dev/null
        # Run the case.
        ${case_map[${1}]}
        # Remove the runtime directory from the stack.
        popd &> /dev/null
    else
        # Exit with an error if we don't recognize the case name.
        echo "Unknown case: \"${1}\""
        exit 1
    fi
}

# Read CLI input.
case "${1}" in
    -h | --help )
        show_help
        exit
        ;;
    --show-cases )
        show_cases
        exit
        ;;
    * )
        run_case "${1}"
        exit
        ;;
esac

